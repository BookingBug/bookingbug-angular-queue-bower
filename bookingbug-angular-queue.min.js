"use strict";function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(self,call){if(!self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!call||"object"!=typeof call&&"function"!=typeof call?self:call}function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}}),superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(self,call){if(!self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!call||"object"!=typeof call&&"function"!=typeof call?self:call}function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}}),superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}angular.module("BBQueue.controllers",[]),angular.module("BBQueue.services",[]),angular.module("BBQueue.directives",[]),angular.module("BBQueue.translations",[]),angular.module("BBQueue",["BBQueue.controllers","BBQueue.services","BBQueue.directives","BBQueue.translations","ngDragDrop","timer"]),angular.module("BBQueue").config(function(AdminCoreOptionsProvider){"ngInject";AdminCoreOptionsProvider.setOption("side_navigation",[{group_name:"SIDE_NAV_QUEUING",items:["queue"]},{group_name:"SIDE_NAV_BOOKINGS",items:["calendar","clients"]},{group_name:"SIDE_NAV_CONFIG",items:["config-iframe","publish-iframe","settings-iframe"]}])}),angular.module("BBQueue").run(function(RuntimeStates,AdminQueueOptions,SideNavigationPartials){AdminQueueOptions.use_default_states&&RuntimeStates.state("queue",{parent:AdminQueueOptions.parent_state,url:"queue",resolve:{company:function(user){return user.$getCompany()},services:function(company){return company.$getServices()},people:function(company){return company.$getPeople()},bookings:function(company,BBModel){var params={company:company,start_date:moment().format("YYYY-MM-DD"),end_date:moment().format("YYYY-MM-DD"),start_time:moment().format("HH:mm"),skip_cache:!1};return BBModel.Admin.Booking.$query(params)}},controller:function($scope,company,services,people,bookings,BBModel){$scope.bookings=bookings,$scope.services=services,$scope.people=people;var refreshBookings=function(){var params={company:company,start_date:moment().format("YYYY-MM-DD"),end_date:moment().format("YYYY-MM-DD"),start_time:moment().format("HH:mm"),skip_cache:!1};BBModel.Admin.Booking.$query(params).then(function(bookings){$scope.bookings=bookings,$scope.$broadcast("updateBookings",bookings)})};!function(){var pusher_channel=company.getPusherChannel("bookings");pusher_channel&&(pusher_channel.bind("create",refreshBookings),pusher_channel.bind("update",refreshBookings),pusher_channel.bind("destroy",refreshBookings))}()},templateUrl:"queue/index.html"}).state("queue.concierge",{parent:"queue",url:"/concierge",templateUrl:"queue/concierge.html",controller:"QueueConciergePageCtrl"}).state("queue.server",{parent:"queue",url:"/server/:id",resolve:{person:function(people,$stateParams){return _.findWhere(people,{id:parseInt($stateParams.id),queuing_disabled:!1}).$refetch()}},templateUrl:"queue/server.html",controller:function($scope,$stateParams,person){$scope.person=person}}),AdminQueueOptions.show_in_navigation&&SideNavigationPartials.addPartialTemplate("queue","queue/nav.html")}),angular.module("BBQueue").run(function($injector,BBModel,$translate){var models=["Queuer","ClientQueue"],_iteratorNormalCompletion=!0,_didIteratorError=!1,_iteratorError=void 0;try{for(var _step,_iterator=Array.from(models)[Symbol.iterator]();!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=!0){var model=_step.value;BBModel.Admin[model]=$injector.get("Admin"+model+"Model")}}catch(err){_didIteratorError=!0,_iteratorError=err}finally{try{!_iteratorNormalCompletion&&_iterator.return&&_iterator.return()}finally{if(_didIteratorError)throw _iteratorError}}}),angular.module("BBQueue.controllers").controller("QueueConciergePageCtrl",["$scope","$state",function($scope,$state){}]);var QueueServerController=function($scope,$log,AdminQueueService,ModalForm,BBModel,CheckSchema,$uibModal,AdminPersonService,$q,AdminQueuerService,Dialog,$translate){var init=function(){$scope.loadingServer=!1;var bookings=_.filter($scope.bookings.items,function(booking){return booking.person_id==$scope.person.id});bookings&&bookings.length>0?$scope.person.next_booking=bookings[0]:$scope.person.next_booking=null};$scope.setAttendance=function(person,status,duration){$scope.loadingServer=!0,person.setAttendance(status,duration).then(function(person){$scope.loadingServer=!1},function(err){$log.error(err.data),$scope.loadingServer=!1})};var upcomingBookingCheck=function(person){return person.next_booking&&person.next_booking.start.isBefore(moment().add(1,"hour"))};$scope.startServingQueuer=function(person,queuer){$scope.loadingServer=!0,upcomingBookingCheck(person)?Dialog.confirm({title:$translate.instant("ADMIN_DASHBOARD.QUEUE_PAGE.NEXT_BOOKING_DIALOG_HEADING"),body:$translate.instant("ADMIN_DASHBOARD.QUEUE_PAGE.NEXT_BOOKING_DIALOG_BODY",{name:person.name,time:person.next_booking.start.format("HH:mm")}),success:function(){person.startServing(queuer).then(function(){$scope.selectQueuer&&$scope.selectQueuer(null),$scope.getQueuers(),$scope.loadingServer=!1})},fail:function(){$scope.loadingServer=!1}}):person.startServing(queuer).then(function(){$scope.selectQueuer&&$scope.selectQueuer(null),$scope.getQueuers(),$scope.loadingServer=!1})},$scope.finishServingQueuer=function(options){var person=options.person,serving=person.serving;$scope.loadingServer=!0,options.outcomes?serving.$get("booking").then(function(booking){booking=new BBModel.Admin.Booking(booking),booking.current_multi_status=options.status,booking.$has("edit")?finishServingOutcome(person,booking):$scope.loadingServer=!1}):options.status?person.finishServing().then(function(){serving.$get("booking").then(function(booking){booking=new BBModel.Admin.Booking(booking),booking.current_multi_status=options.status,booking.$update(booking).then(function(res){$scope.loadingServer=!1})})}):$scope.loadingServer=!1};var finishServingOutcome=function(person,booking){$uibModal.open({templateUrl:"queue/finish_serving_outcome.html",resolve:{person:person,booking:booking,schema:function(){var defer=$q.defer();return booking.$get("edit").then(function(schema){var form=_.reject(schema.form,function(x){return"submit"===x.type});form[0].tabs=[form[0].tabs[form[0].tabs.length-1]],schema.schem=CheckSchema(schema.schema),defer.resolve(schema)},function(){defer.reject()}),defer.promise}},controller:function($scope,$uibModalInstance,schema,booking,person){$scope.person=person,$scope.form_model=booking,$scope.form=schema.form,$scope.schema=schema.schema,$scope.submit=function(){return $uibModalInstance.close()},$scope.close=function(){return $uibModalInstance.dismiss("cancel")}}}).result.then(function(){booking.$update(booking).then(function(){person.finishServing().finally(function(){person.attendance_status=1,$scope.loadingServer=!1})})},function(){$scope.loadingServer=!1})};$scope.updateQueuer=function(){$scope.person.$get("queuers").then(function(collection){collection.$get("queuers").then(function(queuers){queuers=_.map(queuers,function(q){return new BBModel.Admin.Queuer(q)}),$scope.person.serving=null;var queuer=_.find(queuers,function(queuer){return queuer.$has("person")&&queuer.$href("person")==$scope.person.$href("self")});$scope.person.serving=queuer})})},$scope.extendAppointment=function(mins){$scope.loadingServer=!0,$scope.person.serving.extendAppointment(mins).then(function(queuer){$scope.person.serving=queuer,$scope.loadingServer=!1})},$scope.$on("updateBookings",function(){return init()}),init()};angular.module("BBQueue.controllers").controller("bbQueueServerController",QueueServerController),angular.module("BBQueue.directives").directive("countdown",function(){var controller=function($scope){$scope.$watch("$$value$$",function(value){if(null!=value)return $scope.updateModel(value)})};return{require:"ngModel",link:function(scope,element,attrs,ngModel){return ngModel.$render=function(){if(ngModel.$viewValue)return scope.$$value$$=ngModel.$viewValue},scope.updateModel=function(value){ngModel.$setViewValue(value);var secs=parseInt((value%60).toFixed(0)),mins=parseInt((value/60).toFixed(0));return scope.due=mins>1?mins+" Mins":1===mins?"1 Min":0===mins&&secs>10?"< 1 Min":"Next Up"},scope.due=""},controller:controller,scope:{min:"@"},template:"{{due}}"}}),angular.module("BBQueue.directives").directive("bbQueueServer",function(PusherQueue){return{controller:"bbQueueServerController",link:function(scope,element,attrs){PusherQueue.subscribe(scope.bb.company),PusherQueue.channel.bind("notification",function(data){scope.updateQueuer()}),scope.updateQueuer()}}}),angular.module("BBQueue.directives").directive("bbServerListItem",function(){return{controller:"bbQueueServerController",templateUrl:"queue/queue_server_list_item.html"}}),angular.module("BB.Models").factory("AdminClientQueueModel",function($q,BBModel,BaseModel){return function(_BaseModel){function Admin_ClientQueue(){return _classCallCheck(this,Admin_ClientQueue),_possibleConstructorReturn(this,_BaseModel.apply(this,arguments))}return _inherits(Admin_ClientQueue,_BaseModel),Admin_ClientQueue}(BaseModel)}),angular.module("BB.Models").factory("AdminQueuerModel",function($q,BBModel,BaseModel){return function(_BaseModel){function Admin_Queuer(data){_classCallCheck(this,Admin_Queuer);var _this=_possibleConstructorReturn(this,_BaseModel.call(this,data));return _this.start=moment.parseZone(_this.start),_this.due=moment.parseZone(_this.due),_this.end=moment(_this.start).add(_this.duration,"minutes"),_this.created_at=moment.parseZone(_this.created_at),_this}return _inherits(Admin_Queuer,_BaseModel),Admin_Queuer.prototype.remaining=function(){var d=this.due.diff(moment.utc(),"seconds");return this.remaining_unsigned=Math.abs(d),this.remaining_signed=d},Admin_Queuer.prototype.getName=function(){var str="";return this.first_name&&(str+=this.first_name),str.length>0&&this.last_name&&(str+=" "),this.last_name&&(str+=this.last_name),str},Admin_Queuer.prototype.fullMobile=function(){if(this.mobile)return this.mobile_prefix?"+"+this.mobile_prefix+("0"===this.mobile.substr(0,1)?this.mobile.substr(1):this.mobile):this.mobile},Admin_Queuer.prototype.startServing=function(person){var _this2=this,defer=$q.defer();return this.$has("start_serving")?(console.log("start serving url ",this.$href("start_serving")),person.$flush("self"),this.$post("start_serving",{person_id:person.id}).then(function(q){return person.$get("self").then(function(p){return person.updateModel(p)}),_this2.updateModel(q),defer.resolve(_this2)},function(err){return defer.reject(err)})):defer.reject("start_serving link not available"),defer.promise},Admin_Queuer.prototype.finishServing=function(){var _this3=this,defer=$q.defer();return this.$has("finish_serving")?this.$post("finish_serving").then(function(q){return _this3.updateModel(q),defer.resolve(_this3)},function(err){return defer.reject(err)}):defer.reject("finish_serving link not available"),defer.promise},Admin_Queuer.prototype.extendAppointment=function(minutes){var _this4=this,new_duration=void 0,defer=$q.defer();if(this.end.isBefore(moment())){new_duration=moment.duration(moment().diff(this.start)).as("minutes")+minutes}else new_duration=this.duration+minutes;return this.$put("self",{},{duration:new_duration}).then(function(q){return _this4.updateModel(q),_this4.end=moment(_this4.start).add(_this4.duration,"minutes"),defer.resolve(_this4)},function(err){return defer.reject(err)}),defer.promise},Admin_Queuer.prototype.$refetch=function(){var _this5=this,defer=$q.defer();return this.$flush("self"),this.$get("self").then(function(res){return _this5.constructor(res),defer.resolve(_this5)},function(err){return defer.reject(err)}),defer.promise},Admin_Queuer.prototype.$delete=function(){var _this6=this,defer=$q.defer();return this.$flush("self"),this.$del("self").then(function(res){return _this6.constructor(res),defer.resolve(_this6)},function(err){return defer.reject(err)}),defer.promise},Admin_Queuer}(BaseModel)}),angular.module("BBQueue.services").factory("AdminQueueService",function($q,BBModel){return{query:function(params){var defer=$q.defer();return params.company.$get("client_queues").then(function(collection){return collection.$get("client_queues").then(function(client_queues){var models=Array.from(client_queues).map(function(q){return new BBModel.Admin.ClientQueue(q)});return defer.resolve(models)},function(err){return defer.reject(err)})},function(err){return defer.reject(err)}),defer.promise}}}),angular.module("BBQueue.services").provider("AdminQueueOptions",function(){var options={use_default_states:!0,show_in_navigation:!0,parent_state:"root"};this.setOption=function(option,value){options.hasOwnProperty(option)&&(options[option]=value)},this.getOption=function(option){if(options.hasOwnProperty(option))return options[option]},this.$get=function(){return options}}),angular.module("BBQueue.services").factory("AdminQueuerService",function($q,BBModel){return{query:function(params){var defer=$q.defer();return params.company.$flush("queuers"),params.company.$get("queuers").then(function(collection){return collection.$get("queuers").then(function(queuers){var models=Array.from(queuers).map(function(q){return new BBModel.Admin.Queuer(q)});return defer.resolve(models)},function(err){return defer.reject(err)})},function(err){return defer.reject(err)}),defer.promise}}}),angular.module("BBQueue.services").service("CheckSchema",function($q,BBModel){return function(schema){for(var k in schema.properties){var v=schema.properties[k],vals=k.split(".");"questions"===vals[0]&&vals.length>1&&(schema.properties.questions||(schema.properties.questions={type:"object",properties:{}}),schema.properties.questions.properties[vals[1]]||(schema.properties.questions.properties[vals[1]]={type:"object",properties:{answer:v}})),"client"===vals[0]&&vals.length>2&&(schema.properties.client||(schema.properties.client={type:"object",properties:{q:{type:"object",properties:{}}}}),schema.properties.client.properties&&(schema.properties.client.properties.q.properties[vals[2]]||(schema.properties.client.properties.q.properties[vals[2]]={type:"object",properties:{answer:v}})))}return schema}}),angular.module("BBQueue.services").factory("PusherQueue",function($sessionStorage,AppConfig){return function(){function PusherQueue(){_classCallCheck(this,PusherQueue)}return PusherQueue.subscribe=function(company){if(null!=company&&"undefined"!=typeof Pusher&&null!==Pusher&&null==this.client)return this.pusher=new Pusher("c8d8cea659cc46060608",{authEndpoint:"/api/v1/push/"+company.id+"/pusher.json",auth:{headers:{"App-Id":AppConfig["App-Id"],"App-Key":AppConfig["App-Key"],"Auth-Token":$sessionStorage.getItem("auth_token")}}}),this.channel=this.pusher.subscribe("mobile-queue-"+company.id)},PusherQueue}()}),angular.module("BBQueue.translations").config(["$translateProvider",function($translateProvider){return $translateProvider.translations("en",{SIDE_NAV_QUEUING:"QUEUING",ADMIN_DASHBOARD:{SIDE_NAV:{QUEUE_PAGE:{QUEUE:"Concierge",REPORT:"Queue Reports",BOOKING_REPORT:"Booking Reports",PERF_REPORT:"Performance Reports",MAP_REPORT:"Map Reports",LIST:"Queue Display"}},QUEUE_PAGE:{PEOPLE:"Colleagues",PERSON:"Colleague",DATETIME:"Date Time",DETAILS:"Details",CLIENT:"Client",NAME:"Name",EMAIL:"Email",MOBILE:"Mobile",PHONE:"Phone",ACTIONS:"Actions",EDIT:"Edit",ABOUT:"About",ADDRESS:"Address",UPCOMING_BOOKINGS:"Upcoming Bookings",PAST_BOOKINGS:"Past Bookings",NEXT_BOOKING_DIALOG_HEADING:"Upcoming Appointment",NEXT_BOOKING_DIALOG_BODY:"{{name}} has an appointment at {{time}}. Are you sure they want to serve another customer beforehand?"}}})}]);var AddQueueCustomerController=function($scope,$log,AdminServiceService,AdminQueuerService,ModalForm,BBModel,$interval,$sessionStorage,$uibModal,$q,AdminBookingPopup){var addQueuer=function(form){var defer=$q.defer(),service=form.service,person=form.server;return $scope.new_queuer.service_id=service.id,service.$post("queuers",{},$scope.new_queuer).then(function(response){var queuer=new BBModel.Admin.Queuer(response);person?queuer.startServing(person).then(function(){defer.resolve()},function(){defer.reject()}):defer.resolve()}),defer.promise},resetQueuer=function(){$scope.new_queuer={},$scope.loading=!1};$scope.addToQueue=function(){$scope.loading=!0,$uibModal.open({templateUrl:"queue/pick_a_service.html",scope:$scope,controller:function($scope,$uibModalInstance){$scope.dismiss=function(){return $uibModalInstance.dismiss("cancel")},$scope.submit=function(form){return $uibModalInstance.close(form)}}}).result.then(addQueuer).then(resetQueuer).finally(function(){return $scope.loading=!1})},$scope.availableServers=function(){return _.filter($scope.servers,function(server){return 1==server.attendance_status})},$scope.serveCustomerNow=function(){$scope.loading=!0,$uibModal.open({templateUrl:"queue/serve_now.html",resolve:{services:function(){return $scope.services},servers:function(){return $scope.availableServers()}},controller:function($scope,$uibModalInstance,services,servers){$scope.form={},$scope.services=services,$scope.servers=servers,$scope.dismiss=function(){return $uibModalInstance.dismiss("cancel")},$scope.submit=function(form){return $uibModalInstance.close(form)}}}).result.then(addQueuer).then(resetQueuer).finally(function(){return $scope.loading=!1})},$scope.makeAppointment=function(options){var defaultOptions={item_defaults:{pick_first_time:!0,merge_people:!0,merge_resources:!0,date:moment().format("YYYY-MM-DD")},on_conflict:"cancel()",company_id:$scope.company.id};options=_.extend(defaultOptions,options),AdminBookingPopup.open(options).result.finally(resetQueuer)}};angular.module("BBQueue.controllers").controller("bbQueueAddCustomer",AddQueueCustomerController),angular.module("BBQueue.directives").directive("bbQueueAddCustomer",function(){return{controller:"bbQueueAddCustomer",templateUrl:"queue/add_customer.html",scope:{services:"=",servers:"=",company:"="}}});var QueueDashboardController=function($scope,$log,AdminServiceService,AdminQueuerService,ModalForm,BBModel,$interval,$sessionStorage,$uibModal,$q,AdminPersonService){return $scope.loading=!0,$scope.waiting_for_queuers=!1,$scope.queuers=[],$scope.new_queuer={},$interval(function(){if($scope.queuers)return Array.from($scope.queuers).map(function(queuer){return queuer.remaining()})},5e3),$scope.getSetup=function(){var params={company:$scope.company};AdminServiceService.query(params).then(function(services){$scope.services=[];var _iteratorNormalCompletion=!0,_didIteratorError=!1,_iteratorError=void 0;try{for(var _step,_iterator=Array.from(services)[Symbol.iterator]();!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=!0){var service=_step.value;service.queuing_disabled||$scope.services.push(service)}}catch(err){_didIteratorError=!0,_iteratorError=err}finally{try{!_iteratorNormalCompletion&&_iterator.return&&_iterator.return()}finally{if(_didIteratorError)throw _iteratorError}}return $scope.loading=!1},function(err){return $log.error(err.data),$scope.loading=!1})},$scope.getQueuers=function(){if(!$scope.waiting_for_queuers){$scope.waiting_for_queuers=!0;var params={company:$scope.company};return AdminQueuerService.query(params).then(function(queuers){$scope.queuers=queuers,$scope.waiting_queuers=[];var _iteratorNormalCompletion2=!0,_didIteratorError2=!1,_iteratorError2=void 0;try{for(var _step2,_iterator2=Array.from(queuers)[Symbol.iterator]();!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=!0){var queuer=_step2.value;queuer.remaining(),queuer.position>0&&$scope.waiting_queuers.push(queuer)}}catch(err){_didIteratorError2=!0,_iteratorError2=err}finally{try{!_iteratorNormalCompletion2&&_iterator2.return&&_iterator2.return()}finally{if(_didIteratorError2)throw _iteratorError2}}return $scope.waiting_queuers=_.sortBy($scope.waiting_queuers,function(x){return x.position}),$scope.loading=!1,$scope.waiting_for_queuers=!1},function(err){return $log.error(err.data),$scope.loading=!1,$scope.waiting_for_queuers=!1})}},$scope.dropQueuer=function(event,ui,server,trash){if($scope.drag_queuer&&(trash&&($scope.trash_hover=!1,$scope.drag_queuer.$del("self").then(function(queuer){})),server))return $scope.drag_queuer.startServing(server).then(function(){})},$scope.walkedOut=function(queuer){return queuer.$delete().then(function(){return $scope.selected_queuer=null})},$scope.selectQueuer=function(queuer){return $scope.selected_queuer&&$scope.selected_queuer===queuer?$scope.selected_queuer=null:$scope.selected_queuer=queuer},$scope.selectDragQueuer=function(queuer){return $scope.drag_queuer=queuer},$scope.getServers=function(){if(!$scope.getting_people)return $scope.company.$flush("people"),$scope.getting_people=!0,AdminPersonService.query({company:$scope.company}).then(function(people){$scope.getting_people=!1,$scope.all_people=people,$scope.servers=[];var _iteratorNormalCompletion3=!0,_didIteratorError3=!1,_iteratorError3=void 0;try{for(var _step3,_iterator3=Array.from($scope.all_people)[Symbol.iterator]();!(_iteratorNormalCompletion3=(_step3=_iterator3.next()).done);_iteratorNormalCompletion3=!0){var person=_step3.value;person.queuing_disabled||$scope.servers.push(person)}}catch(err){_didIteratorError3=!0,_iteratorError3=err}finally{try{!_iteratorNormalCompletion3&&_iterator3.return&&_iterator3.return()}finally{if(_didIteratorError3)throw _iteratorError3}}return $scope.servers=_.sortBy($scope.servers,function(server){return 1===server.attendance_status?0:4===server.attendance_status?1:2===server.attendance_status?2:3===server.attendance_status?3:3===server.attendance_status?4:void 0}),$scope.loading=!1,$scope.updateQueuers()},function(err){return $scope.getting_people=!1,$log.error(err.data),$scope.loading=!1})},$scope.setAttendance=function(person,status,duration){return $scope.loading=!0,person.setAttendance(status,duration).then(function(person){$scope.loading=!1},function(err){return $log.error(err.data),$scope.loading=!1})},$scope.$watch("queuers",function(newValue,oldValue){return $scope.getServers()}),$scope.updateQueuers=function(){if($scope.queuers&&$scope.servers){var shash={},_iteratorNormalCompletion4=!0,_didIteratorError4=!1,_iteratorError4=void 0;try{for(var _step4,_iterator4=Array.from($scope.servers)[Symbol.iterator]();!(_iteratorNormalCompletion4=(_step4=_iterator4.next()).done);_iteratorNormalCompletion4=!0){var server=_step4.value;server.serving=null,shash[server.self]=server}}catch(err){_didIteratorError4=!0,_iteratorError4=err}finally{try{!_iteratorNormalCompletion4&&_iterator4.return&&_iterator4.return()}finally{if(_didIteratorError4)throw _iteratorError4}}return function(){var result=[],_iteratorNormalCompletion5=!0,_didIteratorError5=!1,_iteratorError5=void 0;try{for(var _step5,_iterator5=Array.from($scope.queuers)[Symbol.iterator]();!(_iteratorNormalCompletion5=(_step5=_iterator5.next()).done);_iteratorNormalCompletion5=!0){var queuer=_step5.value,item=void 0;queuer.$href("person")&&shash[queuer.$href("person")]&&0===queuer.position&&(item=shash[queuer.$href("person")].serving=queuer),result.push(item)}}catch(err){_didIteratorError5=!0,_iteratorError5=err}finally{try{!_iteratorNormalCompletion5&&_iterator5.return&&_iterator5.return()}finally{if(_didIteratorError5)throw _iteratorError5}}return result}()}},$scope.dropCallback=function(event,ui,queuer,$index){return $scope.$apply(function(){return $scope.selectQueuer(null)}),!1},$scope.dragStart=function(event,ui,queuer){return $scope.$apply(function(){return $scope.selectDragQueuer(queuer),$scope.selectQueuer(queuer)}),!1},$scope.dragStop=function(event,ui){return $scope.$apply(function(){return $scope.selectQueuer(null)}),!1}};angular.module("BBQueue.controllers").controller("bbQueueDashboard",QueueDashboardController),angular.module("BBQueue.directives").directive("bbQueueDashboard",function(){return{controller:"bbQueueDashboard",link:function(scope,element,attrs){return scope.getSetup()}}});var QueuersController=function($scope,$log,AdminQueuerService,AdminQueueService,ModalForm,$interval,$q,BBModel){$scope.loading=!0;var getServerQueuers=function(){var defer=$q.defer();return $scope.person.$flush("queuers"),$scope.person.$get("queuers").then(function(collection){collection.$get("queuers").then(function(queuers){queuers=_.map(queuers,function(q){return new BBModel.Admin.Queuer(q)}),defer.resolve(queuers)})}),defer.promise};$scope.getQueuers=function(){if(!$scope.waiting_for_queuers){$scope.waiting_for_queuers=!0;var params={company:$scope.company},proms=[],queuer_prom=void 0;queuer_prom=$scope.person?getServerQueuers():AdminQueuerService.query(params),proms.push(queuer_prom),queuer_prom.then(function(queuers){return $scope.new_queuers=queuers},function(err){$scope.waiting_for_queuers=!1,$log.error(err.data),$scope.loading=!1});var queue_prom=AdminQueueService.query(params);proms.push(queue_prom),queue_prom.then(function(queues){return $scope.new_queues=queues}),$q.all(proms).then(function(){$scope.queuers=$scope.new_queuers,$scope.queues=$scope.new_queues,$scope.waiting_queuers=[];var _iteratorNormalCompletion=!0,_didIteratorError=!1,_iteratorError=void 0;try{for(var _step,_iterator=Array.from($scope.queuers)[Symbol.iterator]();!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=!0){var queuer=_step.value;queuer.remaining(),queuer.position>0&&$scope.waiting_queuers.push({type:"Q",data:queuer,position:queuer.position})}}catch(err){_didIteratorError=!0,_iteratorError=err}finally{try{!_iteratorNormalCompletion&&_iterator.return&&_iterator.return()}finally{if(_didIteratorError)throw _iteratorError}}$scope.waiting_queuers=_.sortBy($scope.waiting_queuers,function(x){return x.position}),$scope.waiting_for_queuers=!1;var _iteratorNormalCompletion2=!0,_didIteratorError2=!1,_iteratorError2=void 0;try{for(var _step2,_iterator2=Array.from($scope.queues)[Symbol.iterator]();!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=!0){var q=_step2.value;q.waiting_queuers=[];var _iteratorNormalCompletion3=!0,_didIteratorError3=!1,_iteratorError3=void 0;try{for(var _step3,_iterator3=Array.from($scope.waiting_queuers)[Symbol.iterator]();!(_iteratorNormalCompletion3=(_step3=_iterator3.next()).done);_iteratorNormalCompletion3=!0)queuer=_step3.value,("Q"===queuer.type&&queuer.data.client_queue_id===q.id||"B"===queuer.type)&&q.waiting_queuers.push(queuer)}catch(err){_didIteratorError3=!0,_iteratorError3=err}finally{try{!_iteratorNormalCompletion3&&_iterator3.return&&_iterator3.return()}finally{if(_didIteratorError3)throw _iteratorError3}}q.waiting_queuers=_.sortBy(q.waiting_queuers,function(x){return x.position})}}catch(err){_didIteratorError2=!0,_iteratorError2=err}finally{try{!_iteratorNormalCompletion2&&_iterator2.return&&_iterator2.return()}finally{if(_didIteratorError2)throw _iteratorError2}}$scope.loading=!1},function(err){$scope.waiting_for_queuers=!1,$log.error(err.data),$scope.loading=!1})}},$scope.getAppointments=function(currentPage,filterBy,filterByFields,orderBy,orderByReverse,skipCache){if(null==skipCache&&(skipCache=!0),filterByFields&&null!=filterByFields.name&&(filterByFields.name=filterByFields.name.replace(/\s/g,"")),filterByFields&&null!=filterByFields.mobile){var mobile=filterByFields.mobile;0===mobile.indexOf("0")&&(filterByFields.mobile=mobile.substring(1))}var defer=$q.defer(),params={company:$scope.company,date:moment().format("YYYY-MM-DD"),url:$scope.bb.api_url};return skipCache&&(params.skip_cache=!0),filterBy&&(params.filter_by=filterBy),filterByFields&&(params.filter_by_fields=filterByFields),orderBy&&(params.order_by=orderBy),orderByReverse&&(params.order_by_reverse=orderByReverse),BBModel.Admin.Booking.$query(params).then(function(res){var bookings=[],_iteratorNormalCompletion4=!0,_didIteratorError4=!1,_iteratorError4=void 0;try{for(var _step4,_iterator4=Array.from(res.items)[Symbol.iterator]();!(_iteratorNormalCompletion4=(_step4=_iterator4.next()).done);_iteratorNormalCompletion4=!0){var item=_step4.value;3!==item.status&&bookings.push(item)}}catch(err){_didIteratorError4=!0,_iteratorError4=err}finally{try{!_iteratorNormalCompletion4&&_iterator4.return&&_iterator4.return()}finally{if(_didIteratorError4)throw _iteratorError4}}defer.resolve(bookings)},function(err){return defer.reject(err)}),defer.promise},$scope.setStatus=function(booking,status){var clone=_.clone(booking);clone.current_multi_status=status,booking.$update(clone).then(function(res){$scope.getQueuers()},function(err){AlertService.danger({msg:"Something went wrong"})})},$scope.newQueuerModal=function(){ModalForm.new({company:$scope.company,title:"New Queuer",new_rel:"new_queuer",post_rel:"queuers",success:function(queuer){$scope.queuers.push(queuer)}})},$scope.getQueuers(),$interval(function(){$scope.queuers&&Array.from($scope.queuers).map(function(queuer){return queuer.remaining()})},5e3)};angular.module("BBQueue.controllers").controller("bbQueuers",QueuersController),angular.module("BBQueue.directives").directive("bbQueuers",function(PusherQueue){return{controller:"bbQueuers",link:function(scope,element,attrs){PusherQueue.subscribe(scope.bb.company),PusherQueue.channel.bind("notification",function(data){scope.getQueuers()})},templateUrl:"queue/queuers.html"}});